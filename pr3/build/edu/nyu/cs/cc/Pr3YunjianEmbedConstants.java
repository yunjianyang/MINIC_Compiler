/* Generated By:JavaCC: Do not edit this line. Pr3YunjianEmbedConstants.java */
package edu.nyu.cs.cc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Pr3YunjianEmbedConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta_Statement = 15;
  /** RegularExpression Id. */
  int T_meta_STR = 21;
  /** RegularExpression Id. */
  int T_meta_Regs = 29;
  /** RegularExpression Id. */
  int T_meta_ExpressionList = 35;
  /** RegularExpression Id. */
  int T_meta_Reg = 57;
  /** RegularExpression Id. */
  int T_meta_INT = 63;
  /** RegularExpression Id. */
  int T_meta_Statements = 69;
  /** RegularExpression Id. */
  int T_meta_Rs = 75;
  /** RegularExpression Id. */
  int T_meta_Expression = 95;
  /** RegularExpression Id. */
  int T_meta_Type = 103;
  /** RegularExpression Id. */
  int T_meta_Constant = 110;
  /** RegularExpression Id. */
  int T_meta_Declarations = 116;
  /** RegularExpression Id. */
  int T_meta_Mem = 124;
  /** RegularExpression Id. */
  int T_meta_TypeIdentifierTail = 130;
  /** RegularExpression Id. */
  int T_meta_Label = 136;
  /** RegularExpression Id. */
  int T_meta_Integers = 142;
  /** RegularExpression Id. */
  int T_meta_ArgumentSignature = 148;
  /** RegularExpression Id. */
  int T_meta_IfTail = 155;
  /** RegularExpression Id. */
  int T_meta_ExpressionListTail = 161;
  /** RegularExpression Id. */
  int T_meta_Program = 167;
  /** RegularExpression Id. */
  int T_meta_String = 173;
  /** RegularExpression Id. */
  int T_meta_Sign = 179;
  /** RegularExpression Id. */
  int T_meta_Op = 207;
  /** RegularExpression Id. */
  int T_meta_Instructions = 213;
  /** RegularExpression Id. */
  int T_meta_TypeListTail = 219;
  /** RegularExpression Id. */
  int T_meta_ID = 225;
  /** RegularExpression Id. */
  int T_meta_Instruction = 234;
  /** RegularExpression Id. */
  int T_meta_Arg = 242;
  /** RegularExpression Id. */
  int T_meta_Declaration = 249;
  /** RegularExpression Id. */
  int T_meta_Integer = 255;
  /** RegularExpression Id. */
  int T_meta_TypeList = 261;
  /** RegularExpression Id. */
  int T_meta_Identifier = 267;
  /** RegularExpression Id. */
  int T_meta_Computed = 273;
  /** RegularExpression Id. */
  int T_meta_After1 = 279;
  /** RegularExpression Id. */
  int T_meta_FT = 285;
  /** RegularExpression Id. */
  int T_meta_Local = 291;
  /** RegularExpression Id. */
  int T_ID = 294;
  /** RegularExpression Id. */
  int T_INT = 295;
  /** RegularExpression Id. */
  int T_STR = 296;
  /** RegularExpression Id. */
  int T_Letter = 297;
  /** RegularExpression Id. */
  int T_LetterEtc = 298;
  /** RegularExpression Id. */
  int T_Digit = 299;
  /** RegularExpression Id. */
  int T_Escape = 300;
  /** RegularExpression Id. */
  int T_Hex = 301;
  /** RegularExpression Id. */
  int T_Octal = 302;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_Statement = 1;
  /** Lexical state. */
  int IN_NESTED_META_Statement = 2;
  /** Lexical state. */
  int IN_META_STR = 3;
  /** Lexical state. */
  int IN_NESTED_META_STR = 4;
  /** Lexical state. */
  int IN_META_Regs = 5;
  /** Lexical state. */
  int IN_NESTED_META_Regs = 6;
  /** Lexical state. */
  int IN_META_ExpressionList = 7;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionList = 8;
  /** Lexical state. */
  int IN_META_Reg = 9;
  /** Lexical state. */
  int IN_NESTED_META_Reg = 10;
  /** Lexical state. */
  int IN_META_INT = 11;
  /** Lexical state. */
  int IN_NESTED_META_INT = 12;
  /** Lexical state. */
  int IN_META_Statements = 13;
  /** Lexical state. */
  int IN_NESTED_META_Statements = 14;
  /** Lexical state. */
  int IN_META_Rs = 15;
  /** Lexical state. */
  int IN_NESTED_META_Rs = 16;
  /** Lexical state. */
  int IN_META_Expression = 17;
  /** Lexical state. */
  int IN_NESTED_META_Expression = 18;
  /** Lexical state. */
  int IN_META_Type = 19;
  /** Lexical state. */
  int IN_NESTED_META_Type = 20;
  /** Lexical state. */
  int IN_META_Constant = 21;
  /** Lexical state. */
  int IN_NESTED_META_Constant = 22;
  /** Lexical state. */
  int IN_META_Declarations = 23;
  /** Lexical state. */
  int IN_NESTED_META_Declarations = 24;
  /** Lexical state. */
  int IN_META_Mem = 25;
  /** Lexical state. */
  int IN_NESTED_META_Mem = 26;
  /** Lexical state. */
  int IN_META_TypeIdentifierTail = 27;
  /** Lexical state. */
  int IN_NESTED_META_TypeIdentifierTail = 28;
  /** Lexical state. */
  int IN_META_Label = 29;
  /** Lexical state. */
  int IN_NESTED_META_Label = 30;
  /** Lexical state. */
  int IN_META_Integers = 31;
  /** Lexical state. */
  int IN_NESTED_META_Integers = 32;
  /** Lexical state. */
  int IN_META_ArgumentSignature = 33;
  /** Lexical state. */
  int IN_NESTED_META_ArgumentSignature = 34;
  /** Lexical state. */
  int IN_META_IfTail = 35;
  /** Lexical state. */
  int IN_NESTED_META_IfTail = 36;
  /** Lexical state. */
  int IN_META_ExpressionListTail = 37;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionListTail = 38;
  /** Lexical state. */
  int IN_META_Program = 39;
  /** Lexical state. */
  int IN_NESTED_META_Program = 40;
  /** Lexical state. */
  int IN_META_String = 41;
  /** Lexical state. */
  int IN_NESTED_META_String = 42;
  /** Lexical state. */
  int IN_META_Sign = 43;
  /** Lexical state. */
  int IN_NESTED_META_Sign = 44;
  /** Lexical state. */
  int IN_META_Op = 45;
  /** Lexical state. */
  int IN_NESTED_META_Op = 46;
  /** Lexical state. */
  int IN_META_Instructions = 47;
  /** Lexical state. */
  int IN_NESTED_META_Instructions = 48;
  /** Lexical state. */
  int IN_META_TypeListTail = 49;
  /** Lexical state. */
  int IN_NESTED_META_TypeListTail = 50;
  /** Lexical state. */
  int IN_META_ID = 51;
  /** Lexical state. */
  int IN_NESTED_META_ID = 52;
  /** Lexical state. */
  int IN_META_Instruction = 53;
  /** Lexical state. */
  int IN_NESTED_META_Instruction = 54;
  /** Lexical state. */
  int IN_META_Arg = 55;
  /** Lexical state. */
  int IN_NESTED_META_Arg = 56;
  /** Lexical state. */
  int IN_META_Declaration = 57;
  /** Lexical state. */
  int IN_NESTED_META_Declaration = 58;
  /** Lexical state. */
  int IN_META_Integer = 59;
  /** Lexical state. */
  int IN_NESTED_META_Integer = 60;
  /** Lexical state. */
  int IN_META_TypeList = 61;
  /** Lexical state. */
  int IN_NESTED_META_TypeList = 62;
  /** Lexical state. */
  int IN_META_Identifier = 63;
  /** Lexical state. */
  int IN_NESTED_META_Identifier = 64;
  /** Lexical state. */
  int IN_META_Computed = 65;
  /** Lexical state. */
  int IN_NESTED_META_Computed = 66;
  /** Lexical state. */
  int IN_META_After1 = 67;
  /** Lexical state. */
  int IN_NESTED_META_After1 = 68;
  /** Lexical state. */
  int IN_META_FT = 69;
  /** Lexical state. */
  int IN_NESTED_META_FT = 70;
  /** Lexical state. */
  int IN_META_Local = 71;
  /** Lexical state. */
  int IN_NESTED_META_Local = 72;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"if\"",
    "\"(\"",
    "\")\"",
    "\"return\"",
    "\";\"",
    "\"var\"",
    "\"while\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "<token of kind 11>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 16>",
    "<token of kind 17>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 22>",
    "\",\"",
    "\"-\"",
    "<token of kind 25>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 30>",
    "<token of kind 31>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 36>",
    "\"LR\"",
    "\"PC\"",
    "\"R0\"",
    "\"R1\"",
    "\"R10\"",
    "\"R11\"",
    "\"R12\"",
    "\"R2\"",
    "\"R3\"",
    "\"R4\"",
    "\"R5\"",
    "\"R6\"",
    "\"R7\"",
    "\"R8\"",
    "\"R9\"",
    "\"SP\"",
    "<token of kind 53>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 58>",
    "<token of kind 59>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 64>",
    "<token of kind 65>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 70>",
    "<token of kind 71>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 76>",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"*\"",
    "\"!\"",
    "\"&\"",
    "\"null\"",
    "\"sizeof\"",
    "<token of kind 91>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 96>",
    "\"char\"",
    "\"int\"",
    "<token of kind 99>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 104>",
    "\"#\"",
    "<token of kind 106>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 111>",
    "<token of kind 112>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 117>",
    "\"[\"",
    "\"]\"",
    "<token of kind 120>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 125>",
    "<token of kind 126>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 131>",
    "<token of kind 132>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 137>",
    "<token of kind 138>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 143>",
    "<token of kind 144>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 149>",
    "\"else\"",
    "<token of kind 151>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 156>",
    "<token of kind 157>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 162>",
    "<token of kind 163>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 168>",
    "<token of kind 169>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 174>",
    "<token of kind 175>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 180>",
    "\"ADD\"",
    "\"AND\"",
    "\"B\"",
    "\"BEQ\"",
    "\"BGE\"",
    "\"BGT\"",
    "\"BL\"",
    "\"BLE\"",
    "\"BLT\"",
    "\"BNE\"",
    "\"CMP\"",
    "\"EOR\"",
    "\"LDMFD\"",
    "\"LDR\"",
    "\"MOV\"",
    "\"MUL\"",
    "\"MVN\"",
    "\"ORR\"",
    "\"RSB\"",
    "\"STMFD\"",
    "\"STR\"",
    "\"SUB\"",
    "<token of kind 203>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 208>",
    "<token of kind 209>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 214>",
    "<token of kind 215>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 220>",
    "<token of kind 221>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 226>",
    "\"DCI\"",
    "\"DCS\"",
    "\"DEF\"",
    "<token of kind 230>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 235>",
    "\"LSL\"",
    "\"LSR\"",
    "<token of kind 238>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 243>",
    "\"function\"",
    "<token of kind 245>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 250>",
    "<token of kind 251>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 256>",
    "<token of kind 257>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 262>",
    "<token of kind 263>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 268>",
    "<token of kind 269>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 274>",
    "<token of kind 275>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 280>",
    "<token of kind 281>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 286>",
    "<token of kind 287>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 292>",
    "<token of kind 293>",
    "<T_ID>",
    "<T_INT>",
    "<T_STR>",
    "<T_Letter>",
    "<T_LetterEtc>",
    "<T_Digit>",
    "<T_Escape>",
    "<T_Hex>",
    "<T_Octal>",
  };

}
