/* Generated By:JavaCC: Do not edit this line. Pr3YunjianEmbedConstants.java */
package edu.nyu.cs.cc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Pr3YunjianEmbedConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta_Op = 31;
  /** RegularExpression Id. */
  int T_meta_Instruction = 41;
  /** RegularExpression Id. */
  int T_meta_TypeList = 47;
  /** RegularExpression Id. */
  int T_meta_Type = 58;
  /** RegularExpression Id. */
  int T_meta_String = 64;
  /** RegularExpression Id. */
  int T_meta_FT = 70;
  /** RegularExpression Id. */
  int T_meta_Arg = 78;
  /** RegularExpression Id. */
  int T_meta_IfTail = 85;
  /** RegularExpression Id. */
  int T_meta_Program = 91;
  /** RegularExpression Id. */
  int T_meta_Mem = 99;
  /** RegularExpression Id. */
  int T_meta_TypeListTail = 105;
  /** RegularExpression Id. */
  int T_meta_After1 = 111;
  /** RegularExpression Id. */
  int T_meta_Rs = 117;
  /** RegularExpression Id. */
  int T_meta_STR = 123;
  /** RegularExpression Id. */
  int T_meta_Regs = 130;
  /** RegularExpression Id. */
  int T_meta_Declaration = 137;
  /** RegularExpression Id. */
  int T_meta_Constant = 145;
  /** RegularExpression Id. */
  int T_meta_Sign = 152;
  /** RegularExpression Id. */
  int T_meta_Statements = 158;
  /** RegularExpression Id. */
  int T_meta_Declarations = 164;
  /** RegularExpression Id. */
  int T_meta_Expression = 180;
  /** RegularExpression Id. */
  int T_meta_ExpressionListTail = 186;
  /** RegularExpression Id. */
  int T_meta_Identifier = 192;
  /** RegularExpression Id. */
  int T_meta_Label = 198;
  /** RegularExpression Id. */
  int T_meta_Integers = 204;
  /** RegularExpression Id. */
  int T_meta_Computed = 210;
  /** RegularExpression Id. */
  int T_meta_Local = 216;
  /** RegularExpression Id. */
  int T_meta_Reg = 238;
  /** RegularExpression Id. */
  int T_meta_ArgumentSignature = 244;
  /** RegularExpression Id. */
  int T_meta_Statement = 255;
  /** RegularExpression Id. */
  int T_meta_ID = 261;
  /** RegularExpression Id. */
  int T_meta_ExpressionList = 267;
  /** RegularExpression Id. */
  int T_meta_TypeIdentifierTail = 273;
  /** RegularExpression Id. */
  int T_meta_Instructions = 279;
  /** RegularExpression Id. */
  int T_meta_INT = 285;
  /** RegularExpression Id. */
  int T_meta_Integer = 291;
  /** RegularExpression Id. */
  int T_ID = 294;
  /** RegularExpression Id. */
  int T_INT = 295;
  /** RegularExpression Id. */
  int T_STR = 296;
  /** RegularExpression Id. */
  int T_Letter = 297;
  /** RegularExpression Id. */
  int T_LetterEtc = 298;
  /** RegularExpression Id. */
  int T_Digit = 299;
  /** RegularExpression Id. */
  int T_Escape = 300;
  /** RegularExpression Id. */
  int T_Hex = 301;
  /** RegularExpression Id. */
  int T_Octal = 302;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_Op = 1;
  /** Lexical state. */
  int IN_NESTED_META_Op = 2;
  /** Lexical state. */
  int IN_META_Instruction = 3;
  /** Lexical state. */
  int IN_NESTED_META_Instruction = 4;
  /** Lexical state. */
  int IN_META_TypeList = 5;
  /** Lexical state. */
  int IN_NESTED_META_TypeList = 6;
  /** Lexical state. */
  int IN_META_Type = 7;
  /** Lexical state. */
  int IN_NESTED_META_Type = 8;
  /** Lexical state. */
  int IN_META_String = 9;
  /** Lexical state. */
  int IN_NESTED_META_String = 10;
  /** Lexical state. */
  int IN_META_FT = 11;
  /** Lexical state. */
  int IN_NESTED_META_FT = 12;
  /** Lexical state. */
  int IN_META_Arg = 13;
  /** Lexical state. */
  int IN_NESTED_META_Arg = 14;
  /** Lexical state. */
  int IN_META_IfTail = 15;
  /** Lexical state. */
  int IN_NESTED_META_IfTail = 16;
  /** Lexical state. */
  int IN_META_Program = 17;
  /** Lexical state. */
  int IN_NESTED_META_Program = 18;
  /** Lexical state. */
  int IN_META_Mem = 19;
  /** Lexical state. */
  int IN_NESTED_META_Mem = 20;
  /** Lexical state. */
  int IN_META_TypeListTail = 21;
  /** Lexical state. */
  int IN_NESTED_META_TypeListTail = 22;
  /** Lexical state. */
  int IN_META_After1 = 23;
  /** Lexical state. */
  int IN_NESTED_META_After1 = 24;
  /** Lexical state. */
  int IN_META_Rs = 25;
  /** Lexical state. */
  int IN_NESTED_META_Rs = 26;
  /** Lexical state. */
  int IN_META_STR = 27;
  /** Lexical state. */
  int IN_NESTED_META_STR = 28;
  /** Lexical state. */
  int IN_META_Regs = 29;
  /** Lexical state. */
  int IN_NESTED_META_Regs = 30;
  /** Lexical state. */
  int IN_META_Declaration = 31;
  /** Lexical state. */
  int IN_NESTED_META_Declaration = 32;
  /** Lexical state. */
  int IN_META_Constant = 33;
  /** Lexical state. */
  int IN_NESTED_META_Constant = 34;
  /** Lexical state. */
  int IN_META_Sign = 35;
  /** Lexical state. */
  int IN_NESTED_META_Sign = 36;
  /** Lexical state. */
  int IN_META_Statements = 37;
  /** Lexical state. */
  int IN_NESTED_META_Statements = 38;
  /** Lexical state. */
  int IN_META_Declarations = 39;
  /** Lexical state. */
  int IN_NESTED_META_Declarations = 40;
  /** Lexical state. */
  int IN_META_Expression = 41;
  /** Lexical state. */
  int IN_NESTED_META_Expression = 42;
  /** Lexical state. */
  int IN_META_ExpressionListTail = 43;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionListTail = 44;
  /** Lexical state. */
  int IN_META_Identifier = 45;
  /** Lexical state. */
  int IN_NESTED_META_Identifier = 46;
  /** Lexical state. */
  int IN_META_Label = 47;
  /** Lexical state. */
  int IN_NESTED_META_Label = 48;
  /** Lexical state. */
  int IN_META_Integers = 49;
  /** Lexical state. */
  int IN_NESTED_META_Integers = 50;
  /** Lexical state. */
  int IN_META_Computed = 51;
  /** Lexical state. */
  int IN_NESTED_META_Computed = 52;
  /** Lexical state. */
  int IN_META_Local = 53;
  /** Lexical state. */
  int IN_NESTED_META_Local = 54;
  /** Lexical state. */
  int IN_META_Reg = 55;
  /** Lexical state. */
  int IN_NESTED_META_Reg = 56;
  /** Lexical state. */
  int IN_META_ArgumentSignature = 57;
  /** Lexical state. */
  int IN_NESTED_META_ArgumentSignature = 58;
  /** Lexical state. */
  int IN_META_Statement = 59;
  /** Lexical state. */
  int IN_NESTED_META_Statement = 60;
  /** Lexical state. */
  int IN_META_ID = 61;
  /** Lexical state. */
  int IN_NESTED_META_ID = 62;
  /** Lexical state. */
  int IN_META_ExpressionList = 63;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionList = 64;
  /** Lexical state. */
  int IN_META_TypeIdentifierTail = 65;
  /** Lexical state. */
  int IN_NESTED_META_TypeIdentifierTail = 66;
  /** Lexical state. */
  int IN_META_Instructions = 67;
  /** Lexical state. */
  int IN_NESTED_META_Instructions = 68;
  /** Lexical state. */
  int IN_META_INT = 69;
  /** Lexical state. */
  int IN_NESTED_META_INT = 70;
  /** Lexical state. */
  int IN_META_Integer = 71;
  /** Lexical state. */
  int IN_NESTED_META_Integer = 72;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"ADD\"",
    "\",\"",
    "\"AND\"",
    "\"B\"",
    "\"BEQ\"",
    "\"BGE\"",
    "\"BGT\"",
    "\"BL\"",
    "\"BLE\"",
    "\"BLT\"",
    "\"BNE\"",
    "\"CMP\"",
    "\"EOR\"",
    "\"LDMFD\"",
    "\"!\"",
    "\"{\"",
    "\"}\"",
    "\"LDR\"",
    "\"MOV\"",
    "\"MUL\"",
    "\"MVN\"",
    "\"ORR\"",
    "\"RSB\"",
    "\"STMFD\"",
    "\"STR\"",
    "\"SUB\"",
    "<token of kind 27>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 32>",
    "\"DCI\"",
    "\"DCS\"",
    "\"DEF\"",
    "\"=\"",
    "<token of kind 37>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 42>",
    "<token of kind 43>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 48>",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"char\"",
    "\"int\"",
    "<token of kind 54>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 59>",
    "<token of kind 60>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 65>",
    "<token of kind 66>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 71>",
    "\"LSL\"",
    "\"LSR\"",
    "<token of kind 74>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 79>",
    "\"else\"",
    "<token of kind 81>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 86>",
    "<token of kind 87>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 92>",
    "\"[\"",
    "\"]\"",
    "<token of kind 95>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 100>",
    "<token of kind 101>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 106>",
    "<token of kind 107>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 112>",
    "<token of kind 113>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 118>",
    "<token of kind 119>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 124>",
    "\"-\"",
    "<token of kind 126>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 131>",
    "\"function\"",
    "<token of kind 133>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 138>",
    "\"#\"",
    "\"&\"",
    "<token of kind 141>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 146>",
    "\"+\"",
    "<token of kind 148>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 153>",
    "<token of kind 154>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 159>",
    "<token of kind 160>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 165>",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"null\"",
    "\"sizeof\"",
    "<token of kind 176>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 181>",
    "<token of kind 182>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 187>",
    "<token of kind 188>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 193>",
    "<token of kind 194>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 199>",
    "<token of kind 200>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 205>",
    "<token of kind 206>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 211>",
    "<token of kind 212>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 217>",
    "\"LR\"",
    "\"PC\"",
    "\"R0\"",
    "\"R1\"",
    "\"R10\"",
    "\"R11\"",
    "\"R12\"",
    "\"R2\"",
    "\"R3\"",
    "\"R4\"",
    "\"R5\"",
    "\"R6\"",
    "\"R7\"",
    "\"R8\"",
    "\"R9\"",
    "\"SP\"",
    "<token of kind 234>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 239>",
    "<token of kind 240>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 245>",
    "\"if\"",
    "\"return\"",
    "\";\"",
    "\"var\"",
    "\"while\"",
    "<token of kind 251>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 256>",
    "<token of kind 257>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 262>",
    "<token of kind 263>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 268>",
    "<token of kind 269>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 274>",
    "<token of kind 275>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 280>",
    "<token of kind 281>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 286>",
    "<token of kind 287>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 292>",
    "<token of kind 293>",
    "<T_ID>",
    "<T_INT>",
    "<T_STR>",
    "<T_Letter>",
    "<T_LetterEtc>",
    "<T_Digit>",
    "<T_Escape>",
    "<T_Hex>",
    "<T_Octal>",
  };

}
