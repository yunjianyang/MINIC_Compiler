/* Generated By:JavaCC: Do not edit this line. Pr3YunjianEmbedConstants.java */
package edu.nyu.cs.cc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Pr3YunjianEmbedConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta_TypeList = 5;
  /** RegularExpression Id. */
  int T_meta_Op = 37;
  /** RegularExpression Id. */
  int T_meta_Computed = 43;
  /** RegularExpression Id. */
  int T_meta_Regs = 50;
  /** RegularExpression Id. */
  int T_meta_IfTail = 57;
  /** RegularExpression Id. */
  int T_meta_Integer = 63;
  /** RegularExpression Id. */
  int T_meta_Rs = 69;
  /** RegularExpression Id. */
  int T_meta_Statements = 75;
  /** RegularExpression Id. */
  int T_meta_Type = 86;
  /** RegularExpression Id. */
  int T_meta_Identifier = 92;
  /** RegularExpression Id. */
  int T_meta_FT = 98;
  /** RegularExpression Id. */
  int T_meta_ID = 104;
  /** RegularExpression Id. */
  int T_meta_Reg = 126;
  /** RegularExpression Id. */
  int T_meta_Statement = 138;
  /** RegularExpression Id. */
  int T_meta_ExpressionListTail = 144;
  /** RegularExpression Id. */
  int T_meta_Arg = 152;
  /** RegularExpression Id. */
  int T_meta_Mem = 160;
  /** RegularExpression Id. */
  int T_meta_INT = 166;
  /** RegularExpression Id. */
  int T_meta_Label = 172;
  /** RegularExpression Id. */
  int T_meta_Declaration = 179;
  /** RegularExpression Id. */
  int T_meta_ExpressionList = 185;
  /** RegularExpression Id. */
  int T_meta_Program = 191;
  /** RegularExpression Id. */
  int T_meta_TypeIdentifierTail = 197;
  /** RegularExpression Id. */
  int T_meta_Expression = 215;
  /** RegularExpression Id. */
  int T_meta_Instruction = 224;
  /** RegularExpression Id. */
  int T_meta_STR = 230;
  /** RegularExpression Id. */
  int T_meta_Declarations = 236;
  /** RegularExpression Id. */
  int T_meta_After1 = 242;
  /** RegularExpression Id. */
  int T_meta_Sign = 248;
  /** RegularExpression Id. */
  int T_meta_ArgumentSignature = 254;
  /** RegularExpression Id. */
  int T_meta_Local = 260;
  /** RegularExpression Id. */
  int T_meta_Instructions = 266;
  /** RegularExpression Id. */
  int T_meta_TypeListTail = 272;
  /** RegularExpression Id. */
  int T_meta_String = 278;
  /** RegularExpression Id. */
  int T_meta_Integers = 284;
  /** RegularExpression Id. */
  int T_meta_Constant = 291;
  /** RegularExpression Id. */
  int T_ID = 294;
  /** RegularExpression Id. */
  int T_INT = 295;
  /** RegularExpression Id. */
  int T_STR = 296;
  /** RegularExpression Id. */
  int T_Letter = 297;
  /** RegularExpression Id. */
  int T_LetterEtc = 298;
  /** RegularExpression Id. */
  int T_Digit = 299;
  /** RegularExpression Id. */
  int T_Escape = 300;
  /** RegularExpression Id. */
  int T_Hex = 301;
  /** RegularExpression Id. */
  int T_Octal = 302;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_TypeList = 1;
  /** Lexical state. */
  int IN_NESTED_META_TypeList = 2;
  /** Lexical state. */
  int IN_META_Op = 3;
  /** Lexical state. */
  int IN_NESTED_META_Op = 4;
  /** Lexical state. */
  int IN_META_Computed = 5;
  /** Lexical state. */
  int IN_NESTED_META_Computed = 6;
  /** Lexical state. */
  int IN_META_Regs = 7;
  /** Lexical state. */
  int IN_NESTED_META_Regs = 8;
  /** Lexical state. */
  int IN_META_IfTail = 9;
  /** Lexical state. */
  int IN_NESTED_META_IfTail = 10;
  /** Lexical state. */
  int IN_META_Integer = 11;
  /** Lexical state. */
  int IN_NESTED_META_Integer = 12;
  /** Lexical state. */
  int IN_META_Rs = 13;
  /** Lexical state. */
  int IN_NESTED_META_Rs = 14;
  /** Lexical state. */
  int IN_META_Statements = 15;
  /** Lexical state. */
  int IN_NESTED_META_Statements = 16;
  /** Lexical state. */
  int IN_META_Type = 17;
  /** Lexical state. */
  int IN_NESTED_META_Type = 18;
  /** Lexical state. */
  int IN_META_Identifier = 19;
  /** Lexical state. */
  int IN_NESTED_META_Identifier = 20;
  /** Lexical state. */
  int IN_META_FT = 21;
  /** Lexical state. */
  int IN_NESTED_META_FT = 22;
  /** Lexical state. */
  int IN_META_ID = 23;
  /** Lexical state. */
  int IN_NESTED_META_ID = 24;
  /** Lexical state. */
  int IN_META_Reg = 25;
  /** Lexical state. */
  int IN_NESTED_META_Reg = 26;
  /** Lexical state. */
  int IN_META_Statement = 27;
  /** Lexical state. */
  int IN_NESTED_META_Statement = 28;
  /** Lexical state. */
  int IN_META_ExpressionListTail = 29;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionListTail = 30;
  /** Lexical state. */
  int IN_META_Arg = 31;
  /** Lexical state. */
  int IN_NESTED_META_Arg = 32;
  /** Lexical state. */
  int IN_META_Mem = 33;
  /** Lexical state. */
  int IN_NESTED_META_Mem = 34;
  /** Lexical state. */
  int IN_META_INT = 35;
  /** Lexical state. */
  int IN_NESTED_META_INT = 36;
  /** Lexical state. */
  int IN_META_Label = 37;
  /** Lexical state. */
  int IN_NESTED_META_Label = 38;
  /** Lexical state. */
  int IN_META_Declaration = 39;
  /** Lexical state. */
  int IN_NESTED_META_Declaration = 40;
  /** Lexical state. */
  int IN_META_ExpressionList = 41;
  /** Lexical state. */
  int IN_NESTED_META_ExpressionList = 42;
  /** Lexical state. */
  int IN_META_Program = 43;
  /** Lexical state. */
  int IN_NESTED_META_Program = 44;
  /** Lexical state. */
  int IN_META_TypeIdentifierTail = 45;
  /** Lexical state. */
  int IN_NESTED_META_TypeIdentifierTail = 46;
  /** Lexical state. */
  int IN_META_Expression = 47;
  /** Lexical state. */
  int IN_NESTED_META_Expression = 48;
  /** Lexical state. */
  int IN_META_Instruction = 49;
  /** Lexical state. */
  int IN_NESTED_META_Instruction = 50;
  /** Lexical state. */
  int IN_META_STR = 51;
  /** Lexical state. */
  int IN_NESTED_META_STR = 52;
  /** Lexical state. */
  int IN_META_Declarations = 53;
  /** Lexical state. */
  int IN_NESTED_META_Declarations = 54;
  /** Lexical state. */
  int IN_META_After1 = 55;
  /** Lexical state. */
  int IN_NESTED_META_After1 = 56;
  /** Lexical state. */
  int IN_META_Sign = 57;
  /** Lexical state. */
  int IN_NESTED_META_Sign = 58;
  /** Lexical state. */
  int IN_META_ArgumentSignature = 59;
  /** Lexical state. */
  int IN_NESTED_META_ArgumentSignature = 60;
  /** Lexical state. */
  int IN_META_Local = 61;
  /** Lexical state. */
  int IN_NESTED_META_Local = 62;
  /** Lexical state. */
  int IN_META_Instructions = 63;
  /** Lexical state. */
  int IN_NESTED_META_Instructions = 64;
  /** Lexical state. */
  int IN_META_TypeListTail = 65;
  /** Lexical state. */
  int IN_NESTED_META_TypeListTail = 66;
  /** Lexical state. */
  int IN_META_String = 67;
  /** Lexical state. */
  int IN_NESTED_META_String = 68;
  /** Lexical state. */
  int IN_META_Integers = 69;
  /** Lexical state. */
  int IN_NESTED_META_Integers = 70;
  /** Lexical state. */
  int IN_META_Constant = 71;
  /** Lexical state. */
  int IN_NESTED_META_Constant = 72;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 6>",
    "\"ADD\"",
    "\",\"",
    "\"AND\"",
    "\"B\"",
    "\"BEQ\"",
    "\"BGE\"",
    "\"BGT\"",
    "\"BL\"",
    "\"BLE\"",
    "\"BLT\"",
    "\"BNE\"",
    "\"CMP\"",
    "\"EOR\"",
    "\"LDMFD\"",
    "\"!\"",
    "\"{\"",
    "\"}\"",
    "\"LDR\"",
    "\"MOV\"",
    "\"MUL\"",
    "\"MVN\"",
    "\"ORR\"",
    "\"RSB\"",
    "\"STMFD\"",
    "\"STR\"",
    "\"SUB\"",
    "<token of kind 33>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 38>",
    "<token of kind 39>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 44>",
    "\"-\"",
    "<token of kind 46>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 51>",
    "\"else\"",
    "<token of kind 53>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 58>",
    "<token of kind 59>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 64>",
    "<token of kind 65>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 70>",
    "<token of kind 71>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 76>",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"char\"",
    "\"int\"",
    "<token of kind 82>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 87>",
    "<token of kind 88>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 93>",
    "<token of kind 94>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 99>",
    "<token of kind 100>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 105>",
    "\"LR\"",
    "\"PC\"",
    "\"R0\"",
    "\"R1\"",
    "\"R10\"",
    "\"R11\"",
    "\"R12\"",
    "\"R2\"",
    "\"R3\"",
    "\"R4\"",
    "\"R5\"",
    "\"R6\"",
    "\"R7\"",
    "\"R8\"",
    "\"R9\"",
    "\"SP\"",
    "<token of kind 122>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 127>",
    "\"if\"",
    "\"return\"",
    "\";\"",
    "\"var\"",
    "\"while\"",
    "\"=\"",
    "<token of kind 134>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 139>",
    "<token of kind 140>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 145>",
    "\"LSL\"",
    "\"LSR\"",
    "<token of kind 148>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 153>",
    "\"[\"",
    "\"]\"",
    "<token of kind 156>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 161>",
    "<token of kind 162>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 167>",
    "<token of kind 168>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 173>",
    "\"function\"",
    "<token of kind 175>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 180>",
    "<token of kind 181>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 186>",
    "<token of kind 187>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 192>",
    "<token of kind 193>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 198>",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"&\"",
    "\"null\"",
    "\"sizeof\"",
    "<token of kind 211>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 216>",
    "\"DCI\"",
    "\"DCS\"",
    "\"DEF\"",
    "<token of kind 220>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 225>",
    "<token of kind 226>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 231>",
    "<token of kind 232>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 237>",
    "<token of kind 238>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 243>",
    "<token of kind 244>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 249>",
    "<token of kind 250>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 255>",
    "<token of kind 256>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 261>",
    "<token of kind 262>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 267>",
    "<token of kind 268>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 273>",
    "<token of kind 274>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 279>",
    "<token of kind 280>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 285>",
    "\"#\"",
    "<token of kind 287>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 292>",
    "<token of kind 293>",
    "<T_ID>",
    "<T_INT>",
    "<T_STR>",
    "<T_Letter>",
    "<T_LetterEtc>",
    "<T_Digit>",
    "<T_Escape>",
    "<T_Hex>",
    "<T_Octal>",
  };

}
