/* Pr3YunjianEmbedTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. Pr3YunjianEmbedTokenManager.java */
package edu.nyu.cs.cc;

/** Token Manager. */
@SuppressWarnings("unused")public class Pr3YunjianEmbedTokenManager implements Pr3YunjianEmbedConstants {
                    int nesting; int nestedState;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_71(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 288);
      case 10217:
         return jjStopAtPos(0, 291);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_29(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 133);
      case 10217:
         return jjStopAtPos(0, 136);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_23(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 113);
      case 10217:
         return jjStopAtPos(0, 116);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_45(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 204);
      case 10217:
         return jjStopAtPos(0, 207);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 12);
      case 10217:
         return jjStopAtPos(0, 15);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_46(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 205);
      case 10217:
         return jjStopAtPos(0, 206);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_41(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 170);
      case 10217:
         return jjStopAtPos(0, 173);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_65(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 270);
      case 10217:
         return jjStopAtPos(0, 273);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_9(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 54);
      case 10217:
         return jjStopAtPos(0, 57);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_58(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 247);
      case 10217:
         return jjStopAtPos(0, 248);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 13);
      case 10217:
         return jjStopAtPos(0, 14);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_42(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 171);
      case 10217:
         return jjStopAtPos(0, 172);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_54(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 232);
      case 10217:
         return jjStopAtPos(0, 233);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_50(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 217);
      case 10217:
         return jjStopAtPos(0, 218);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_62(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 259);
      case 10217:
         return jjStopAtPos(0, 260);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 19);
      case 10217:
         return jjStopAtPos(0, 20);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_22(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 108);
      case 10217:
         return jjStopAtPos(0, 109);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_48(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 211);
      case 10217:
         return jjStopAtPos(0, 212);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_44(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 177);
      case 10217:
         return jjStopAtPos(0, 178);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_51(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 222);
      case 10217:
         return jjStopAtPos(0, 225);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_11(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 60);
      case 10217:
         return jjStopAtPos(0, 63);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_31(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 139);
      case 10217:
         return jjStopAtPos(0, 142);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_60(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 253);
      case 10217:
         return jjStopAtPos(0, 254);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_25(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 121);
      case 10217:
         return jjStopAtPos(0, 124);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_52(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 223);
      case 10217:
         return jjStopAtPos(0, 224);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_64(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 265);
      case 10217:
         return jjStopAtPos(0, 266);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_6(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 27);
      case 10217:
         return jjStopAtPos(0, 28);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_59(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 252);
      case 10217:
         return jjStopAtPos(0, 255);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_20(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 101);
      case 10217:
         return jjStopAtPos(0, 102);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_38(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 159);
      case 10217:
         return jjStopAtPos(0, 160);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_7(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 32);
      case 10217:
         return jjStopAtPos(0, 35);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_10(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 55);
      case 10217:
         return jjStopAtPos(0, 56);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_37(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 158);
      case 10217:
         return jjStopAtPos(0, 161);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_35(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 152);
      case 10217:
         return jjStopAtPos(0, 155);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_36(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 153);
      case 10217:
         return jjStopAtPos(0, 154);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_18(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 93);
      case 10217:
         return jjStopAtPos(0, 94);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_12(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 61);
      case 10217:
         return jjStopAtPos(0, 62);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_26(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 122);
      case 10217:
         return jjStopAtPos(0, 123);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_14(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 67);
      case 10217:
         return jjStopAtPos(0, 68);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_15(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 72);
      case 10217:
         return jjStopAtPos(0, 75);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_55(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 239);
      case 10217:
         return jjStopAtPos(0, 242);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_72(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 289);
      case 10217:
         return jjStopAtPos(0, 290);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_30(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 134);
      case 10217:
         return jjStopAtPos(0, 135);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_16(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 73);
      case 10217:
         return jjStopAtPos(0, 74);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_24(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 114);
      case 10217:
         return jjStopAtPos(0, 115);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_66(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 271);
      case 10217:
         return jjStopAtPos(0, 272);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_43(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 176);
      case 10217:
         return jjStopAtPos(0, 179);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_49(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 216);
      case 10217:
         return jjStopAtPos(0, 219);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_69(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 282);
      case 10217:
         return jjStopAtPos(0, 285);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_47(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 210);
      case 10217:
         return jjStopAtPos(0, 213);
      default :
         return 1;
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2, long active3){
   switch (pos)
   {
      case 0:
         if ((active2 & 0x7f80000000000000L) != 0L)
            return 2;
         if ((active0 & 0x1fffe0000000d2L) != 0L || (active1 & 0x606000000L) != 0L || (active2 & 0x8060000000400000L) != 0L || (active3 & 0x103038000007ffL) != 0L)
         {
            jjmatchedKind = 294;
            return 2;
         }
         return -1;
      case 1:
         if ((active0 & 0x1fffe000000002L) != 0L || (active2 & 0x3800000000000000L) != 0L)
            return 2;
         if ((active0 & 0xd0L) != 0L || (active1 & 0x606000000L) != 0L || (active2 & 0xc760000000400000L) != 0L || (active3 & 0x103038000007ffL) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 294;
               jjmatchedPos = 1;
            }
            return 2;
         }
         return -1;
      case 2:
         if ((active0 & 0xe0000000040L) != 0L || (active1 & 0x400000000L) != 0L || (active2 & 0xf760000000000000L) != 0L || (active3 & 0x3038000006fdL) != 0L)
            return 2;
         if ((active0 & 0x90L) != 0L || (active1 & 0x206000000L) != 0L || (active2 & 0x400000L) != 0L || (active3 & 0x10000000000102L) != 0L)
         {
            jjmatchedKind = 294;
            jjmatchedPos = 2;
            return 2;
         }
         return -1;
      case 3:
         if ((active1 & 0x202000000L) != 0L || (active2 & 0x400000L) != 0L)
            return 2;
         if ((active0 & 0x90L) != 0L || (active1 & 0x4000000L) != 0L || (active3 & 0x10000000000102L) != 0L)
         {
            jjmatchedKind = 294;
            jjmatchedPos = 3;
            return 2;
         }
         return -1;
      case 4:
         if ((active0 & 0x80L) != 0L || (active3 & 0x102L) != 0L)
            return 2;
         if ((active0 & 0x10L) != 0L || (active1 & 0x4000000L) != 0L || (active3 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 294;
            jjmatchedPos = 4;
            return 2;
         }
         return -1;
      case 5:
         if ((active0 & 0x10L) != 0L || (active1 & 0x4000000L) != 0L)
            return 2;
         if ((active3 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 294;
            jjmatchedPos = 5;
            return 2;
         }
         return -1;
      case 6:
         if ((active3 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 294;
            jjmatchedPos = 6;
            return 2;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2, long active3){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 87;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000L, 0x0L, 0x0L);
      case 35:
         return jjStopAtPos(0, 105);
      case 38:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000L, 0x0L, 0x0L);
      case 40:
         return jjStopAtPos(0, 2);
      case 41:
         return jjStopAtPos(0, 3);
      case 42:
         return jjStopAtPos(0, 86);
      case 43:
         return jjStopAtPos(0, 85);
      case 44:
         return jjStopAtPos(0, 23);
      case 45:
         return jjStopAtPos(0, 24);
      case 59:
         return jjStopAtPos(0, 5);
      case 60:
         jjmatchedKind = 81;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000L, 0x0L, 0x0L);
      case 61:
         jjmatchedKind = 10;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000L, 0x0L, 0x0L);
      case 62:
         jjmatchedKind = 83;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000L, 0x0L, 0x0L);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x60000000000000L, 0x0L);
      case 66:
         jjmatchedKind = 183;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x7f00000000000000L, 0x0L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x8000000000000000L, 0x0L);
      case 68:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x3800000000L);
      case 69:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x1L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x2000000000L, 0x0L, 0x0L, 0x300000000006L);
      case 77:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x38L);
      case 79:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x40L);
      case 80:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L, 0x0L, 0x0L);
      case 82:
         return jjMoveStringLiteralDfa1_0(0xfff8000000000L, 0x0L, 0x0L, 0x80L);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L, 0x0L, 0x700L);
      case 91:
         return jjStopAtPos(0, 118);
      case 93:
         return jjStopAtPos(0, 119);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000000L, 0x0L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x400000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x10000000000000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x2L, 0x400000000L, 0x0L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L, 0x0L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L, 0x0L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000L, 0x0L, 0x0L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L, 0x0L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x80L, 0x0L, 0x0L, 0x0L);
      case 123:
         return jjStopAtPos(0, 8);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000L, 0x0L, 0x0L);
      case 125:
         return jjStopAtPos(0, 9);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2, long active3){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2, active3);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active1 & 0x4000L) != 0L)
            return jjStopAtPos(1, 78);
         break;
      case 48:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 2);
         break;
      case 49:
         if ((active0 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0xe0000000000L, active1, 0L, active2, 0L, active3, 0L);
      case 50:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 44, 2);
         break;
      case 51:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 45, 2);
         break;
      case 52:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 46, 2);
         break;
      case 53:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 47, 2);
         break;
      case 54:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 48, 2);
         break;
      case 55:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 49, 2);
         break;
      case 56:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 50, 2);
         break;
      case 57:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 51, 2);
         break;
      case 61:
         if ((active1 & 0x8000L) != 0L)
            return jjStopAtPos(1, 79);
         else if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(1, 80);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(1, 82);
         else if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         break;
      case 67:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 38, 2);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x1800000000L);
      case 68:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x20000000000000L, active3, 0x6L);
      case 69:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x100000000000000L, active3, 0x2000000000L);
      case 71:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x600000000000000L, active3, 0L);
      case 76:
         if ((active2 & 0x800000000000000L) != 0L)
         {
            jjmatchedKind = 187;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x3000000000000000L, active3, 0L);
      case 77:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x8000000000000000L, active3, 0L);
      case 78:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x4040000000000000L, active3, 0L);
      case 79:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x9L);
      case 80:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 52, 2);
         break;
      case 82:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 2);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x40L);
      case 83:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x300000000080L);
      case 84:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x300L);
      case 85:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x410L);
      case 86:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x20L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L, active2, 0L, active3, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x10L, active1, 0L, active2, 0L, active3, 0L);
      case 102:
         if ((active0 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(1, 1, 2);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x80L, active1, 0x200000000L, active2, 0L, active3, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000000L, active2, 0L, active3, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000000L, active2, 0L, active3, 0L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000000L, active2, 0L, active3, 0x10000000000000L);
      case 124:
         if ((active1 & 0x2000L) != 0L)
            return jjStopAtPos(1, 77);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2, active3);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, active2, active3);
      return 2;
   }
   switch(curChar)
   {
      case 48:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 41, 2);
         break;
      case 49:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 42, 2);
         break;
      case 50:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 43, 2);
         break;
      case 66:
         if ((active3 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(2, 199, 2);
         else if ((active3 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(2, 202, 2);
         break;
      case 68:
         if ((active2 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 181, 2);
         else if ((active2 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 182, 2);
         break;
      case 69:
         if ((active2 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 185, 2);
         else if ((active2 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 188, 2);
         else if ((active2 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 190, 2);
         break;
      case 70:
         if ((active3 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 229, 2);
         break;
      case 73:
         if ((active3 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(2, 227, 2);
         break;
      case 76:
         if ((active3 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(2, 196, 2);
         else if ((active3 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 236, 2);
         break;
      case 77:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x102L);
      case 78:
         if ((active3 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(2, 197, 2);
         break;
      case 80:
         if ((active2 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 191, 2);
         break;
      case 81:
         if ((active2 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 184, 2);
         break;
      case 82:
         if ((active3 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(2, 192, 2);
         else if ((active3 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(2, 194, 2);
         else if ((active3 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(2, 198, 2);
         else if ((active3 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(2, 201, 2);
         else if ((active3 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 237, 2);
         break;
      case 83:
         if ((active3 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 228, 2);
         break;
      case 84:
         if ((active2 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 186, 2);
         else if ((active2 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 189, 2);
         break;
      case 86:
         if ((active3 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(2, 195, 2);
         break;
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000L, active2, 0L, active3, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x80L, active1, 0L, active2, 0L, active3, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000L, active2, 0L, active3, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x10000000000000L);
      case 114:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(2, 6, 2);
         break;
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0L);
      case 116:
         if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(2, 98, 2);
         return jjMoveStringLiteralDfa3_0(active0, 0x10L, active1, 0L, active2, 0L, active3, 0L);
      case 122:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000L, active2, 0L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, active2, active3);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(1, old0, old1, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1, active2, active3);
      return 3;
   }
   switch(curChar)
   {
      case 70:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x102L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x10000000000000L);
      case 101:
         if ((active2 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(3, 150, 2);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000L, active2, 0L, active3, 0L);
      case 108:
         if ((active1 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 89, 2);
         return jjMoveStringLiteralDfa4_0(active0, 0x80L, active1, 0L, active2, 0L, active3, 0L);
      case 114:
         if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(3, 97, 2);
         break;
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x10L, active1, 0L, active2, 0L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1, active2, active3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(2, old0, old1, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1, 0L, active3);
      return 4;
   }
   switch(curChar)
   {
      case 68:
         if ((active3 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(4, 193, 2);
         else if ((active3 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(4, 200, 2);
         break;
      case 101:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(4, 7, 2);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x4000000L, active3, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x10L, active1, 0L, active3, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active3, 0x10000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1, 0L, active3);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1, long old3, long active3){
   if (((active0 &= old0) | (active1 &= old1) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(3, old0, old1, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1, 0L, active3);
      return 5;
   }
   switch(curChar)
   {
      case 102:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(5, 90, 2);
         break;
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active3, 0x10000000000000L);
      case 110:
         if ((active0 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(5, 4, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1, 0L, active3);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1, long old3, long active3){
   if (((active0 &= old0) | (active1 &= old1) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(4, old0, old1, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, 0L, 0L, active3);
      return 6;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa7_0(active3, 0x10000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa7_0(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_0(5, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, 0L, 0L, active3);
      return 7;
   }
   switch(curChar)
   {
      case 110:
         if ((active3 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 244, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, 0L, 0L, active3);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec3 = {
   0x0L, 0x0L, 0x0L, 0x10000000000L
};
static final long[] jjbitVec4 = {
   0xffffff7ffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec5 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffcffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 406;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 295)
                        kind = 295;
                     { jjCheckNAdd(3); }
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 293)
                        kind = 293;
                  }
                  else if (curChar == 47)
                     { jjAddStates(0, 1); }
                  else if (curChar == 34)
                     { jjCheckNAddStates(2, 4); }
                  else if (curChar == 36)
                  {
                     if (kind > 294)
                        kind = 294;
                     { jjCheckNAdd(2); }
                  }
                  break;
               case 1:
                  if (curChar != 36)
                     break;
                  if (kind > 294)
                     kind = 294;
                  { jjCheckNAdd(2); }
                  break;
               case 2:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 294)
                     kind = 294;
                  { jjCheckNAdd(2); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 295)
                     kind = 295;
                  { jjCheckNAdd(3); }
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 5:
                  if ((0xfffffffbfffffbffL & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 7:
                  if ((0xff000000000400L & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 296)
                     kind = 296;
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 12:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(13, 14); }
                  break;
               case 13:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(14); }
                  break;
               case 14:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 15:
                  if (curChar == 47)
                     { jjAddStates(0, 1); }
                  break;
               case 16:
                  if (curChar != 47)
                     break;
                  if (kind > 293)
                     kind = 293;
                  { jjCheckNAdd(17); }
                  break;
               case 17:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 293)
                     kind = 293;
                  { jjCheckNAdd(17); }
                  break;
               case 18:
                  if (curChar == 42)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 19:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 20:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0xffff7fffffffffffL & l) != 0L)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 22:
                  if (curChar == 47 && kind > 293)
                     kind = 293;
                  break;
               case 23:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  if (curChar == 32)
                     { jjAddStates(8, 9); }
                  break;
               case 27:
                  if (curChar == 32)
                     { jjAddStates(10, 11); }
                  break;
               case 28:
                  if (kind > 11)
                     kind = 11;
                  break;
               case 37:
                  if (curChar == 32)
                     { jjAddStates(12, 13); }
                  break;
               case 39:
                  if (curChar == 32)
                     { jjAddStates(14, 15); }
                  break;
               case 40:
                  if (kind > 17)
                     kind = 17;
                  break;
               case 43:
                  if (curChar == 32)
                     { jjAddStates(16, 17); }
                  break;
               case 45:
                  if (curChar == 32)
                     { jjAddStates(18, 19); }
                  break;
               case 46:
                  if (kind > 25)
                     kind = 25;
                  break;
               case 50:
                  if (curChar == 32)
                     { jjAddStates(20, 21); }
                  break;
               case 52:
                  if (curChar == 32)
                     { jjAddStates(22, 23); }
                  break;
               case 53:
                  if (kind > 31)
                     kind = 31;
                  break;
               case 67:
                  if (curChar == 32)
                     { jjAddStates(24, 25); }
                  break;
               case 69:
                  if (curChar == 32)
                     { jjAddStates(26, 27); }
                  break;
               case 70:
                  if (kind > 53)
                     kind = 53;
                  break;
               case 73:
                  if (curChar == 32)
                     { jjAddStates(28, 29); }
                  break;
               case 75:
                  if (curChar == 32)
                     { jjAddStates(30, 31); }
                  break;
               case 76:
                  if (kind > 59)
                     kind = 59;
                  break;
               case 79:
                  if (curChar == 32)
                     { jjAddStates(32, 33); }
                  break;
               case 81:
                  if (curChar == 32)
                     { jjAddStates(34, 35); }
                  break;
               case 82:
                  if (kind > 65)
                     kind = 65;
                  break;
               case 92:
                  if (curChar == 32)
                     { jjAddStates(36, 37); }
                  break;
               case 94:
                  if (curChar == 32)
                     { jjAddStates(38, 39); }
                  break;
               case 95:
                  if (kind > 71)
                     kind = 71;
                  break;
               case 97:
                  if (curChar == 32)
                     { jjAddStates(40, 41); }
                  break;
               case 99:
                  if (curChar == 32)
                     { jjAddStates(42, 43); }
                  break;
               case 100:
                  if (kind > 91)
                     kind = 91;
                  break;
               case 110:
                  if (curChar == 32)
                     { jjAddStates(44, 45); }
                  break;
               case 112:
                  if (curChar == 32)
                     { jjAddStates(46, 47); }
                  break;
               case 113:
                  if (kind > 99)
                     kind = 99;
                  break;
               case 117:
                  if (curChar == 32)
                     { jjAddStates(48, 49); }
                  break;
               case 119:
                  if (curChar == 32)
                     { jjAddStates(50, 51); }
                  break;
               case 120:
                  if (kind > 106)
                     kind = 106;
                  break;
               case 128:
                  if (curChar == 32)
                     { jjAddStates(52, 53); }
                  break;
               case 130:
                  if (curChar == 32)
                     { jjAddStates(54, 55); }
                  break;
               case 131:
                  if (kind > 112)
                     kind = 112;
                  break;
               case 143:
                  if (curChar == 32)
                     { jjAddStates(56, 57); }
                  break;
               case 145:
                  if (curChar == 32)
                     { jjAddStates(58, 59); }
                  break;
               case 146:
                  if (kind > 120)
                     kind = 120;
                  break;
               case 149:
                  if (curChar == 32)
                     { jjAddStates(60, 61); }
                  break;
               case 151:
                  if (curChar == 32)
                     { jjAddStates(62, 63); }
                  break;
               case 152:
                  if (kind > 126)
                     kind = 126;
                  break;
               case 170:
                  if (curChar == 32)
                     { jjAddStates(64, 65); }
                  break;
               case 172:
                  if (curChar == 32)
                     { jjAddStates(66, 67); }
                  break;
               case 173:
                  if (kind > 132)
                     kind = 132;
                  break;
               case 178:
                  if (curChar == 32)
                     { jjAddStates(68, 69); }
                  break;
               case 180:
                  if (curChar == 32)
                     { jjAddStates(70, 71); }
                  break;
               case 181:
                  if (kind > 138)
                     kind = 138;
                  break;
               case 189:
                  if (curChar == 32)
                     { jjAddStates(72, 73); }
                  break;
               case 191:
                  if (curChar == 32)
                     { jjAddStates(74, 75); }
                  break;
               case 192:
                  if (kind > 144)
                     kind = 144;
                  break;
               case 209:
                  if (curChar == 32)
                     { jjAddStates(76, 77); }
                  break;
               case 211:
                  if (curChar == 32)
                     { jjAddStates(78, 79); }
                  break;
               case 212:
                  if (kind > 151)
                     kind = 151;
                  break;
               case 218:
                  if (curChar == 32)
                     { jjAddStates(80, 81); }
                  break;
               case 220:
                  if (curChar == 32)
                     { jjAddStates(82, 83); }
                  break;
               case 221:
                  if (kind > 157)
                     kind = 157;
                  break;
               case 239:
                  if (curChar == 32)
                     { jjAddStates(84, 85); }
                  break;
               case 241:
                  if (curChar == 32)
                     { jjAddStates(86, 87); }
                  break;
               case 242:
                  if (kind > 163)
                     kind = 163;
                  break;
               case 249:
                  if (curChar == 32)
                     { jjAddStates(88, 89); }
                  break;
               case 251:
                  if (curChar == 32)
                     { jjAddStates(90, 91); }
                  break;
               case 252:
                  if (kind > 169)
                     kind = 169;
                  break;
               case 258:
                  if (curChar == 32)
                     { jjAddStates(92, 93); }
                  break;
               case 260:
                  if (curChar == 32)
                     { jjAddStates(94, 95); }
                  break;
               case 261:
                  if (kind > 175)
                     kind = 175;
                  break;
               case 265:
                  if (curChar == 32)
                     { jjAddStates(96, 97); }
                  break;
               case 267:
                  if (curChar == 32)
                     { jjAddStates(98, 99); }
                  break;
               case 268:
                  if (kind > 203)
                     kind = 203;
                  break;
               case 270:
                  if (curChar == 32)
                     { jjAddStates(100, 101); }
                  break;
               case 272:
                  if (curChar == 32)
                     { jjAddStates(102, 103); }
                  break;
               case 273:
                  if (kind > 209)
                     kind = 209;
                  break;
               case 285:
                  if (curChar == 32)
                     { jjAddStates(104, 105); }
                  break;
               case 287:
                  if (curChar == 32)
                     { jjAddStates(106, 107); }
                  break;
               case 288:
                  if (kind > 215)
                     kind = 215;
                  break;
               case 300:
                  if (curChar == 32)
                     { jjAddStates(108, 109); }
                  break;
               case 302:
                  if (curChar == 32)
                     { jjAddStates(110, 111); }
                  break;
               case 303:
                  if (kind > 221)
                     kind = 221;
                  break;
               case 305:
                  if (curChar == 32)
                     { jjAddStates(112, 113); }
                  break;
               case 307:
                  if (curChar == 32)
                     { jjAddStates(114, 115); }
                  break;
               case 308:
                  if (kind > 230)
                     kind = 230;
                  break;
               case 319:
                  if (curChar == 32)
                     { jjAddStates(116, 117); }
                  break;
               case 321:
                  if (curChar == 32)
                     { jjAddStates(118, 119); }
                  break;
               case 322:
                  if (kind > 238)
                     kind = 238;
                  break;
               case 325:
                  if (curChar == 32)
                     { jjAddStates(120, 121); }
                  break;
               case 327:
                  if (curChar == 32)
                     { jjAddStates(122, 123); }
                  break;
               case 328:
                  if (kind > 245)
                     kind = 245;
                  break;
               case 339:
                  if (curChar == 32)
                     { jjAddStates(124, 125); }
                  break;
               case 341:
                  if (curChar == 32)
                     { jjAddStates(126, 127); }
                  break;
               case 342:
                  if (kind > 251)
                     kind = 251;
                  break;
               case 349:
                  if (curChar == 32)
                     { jjAddStates(128, 129); }
                  break;
               case 351:
                  if (curChar == 32)
                     { jjAddStates(130, 131); }
                  break;
               case 352:
                  if (kind > 257)
                     kind = 257;
                  break;
               case 360:
                  if (curChar == 32)
                     { jjAddStates(132, 133); }
                  break;
               case 362:
                  if (curChar == 32)
                     { jjAddStates(134, 135); }
                  break;
               case 363:
                  if (kind > 263)
                     kind = 263;
                  break;
               case 373:
                  if (curChar == 32)
                     { jjAddStates(136, 137); }
                  break;
               case 375:
                  if (curChar == 32)
                     { jjAddStates(138, 139); }
                  break;
               case 376:
                  if (kind > 269)
                     kind = 269;
                  break;
               case 384:
                  if (curChar == 32)
                     { jjAddStates(140, 141); }
                  break;
               case 385:
                  if (curChar == 49)
                     { jjCheckNAddTwoStates(386, 387); }
                  break;
               case 386:
                  if (curChar == 32)
                     { jjCheckNAddTwoStates(386, 387); }
                  break;
               case 387:
                  if (kind > 275)
                     kind = 275;
                  break;
               case 393:
                  if (curChar == 32)
                     { jjAddStates(142, 143); }
                  break;
               case 395:
                  if (curChar == 32)
                     { jjAddStates(144, 145); }
                  break;
               case 396:
                  if (kind > 281)
                     kind = 281;
                  break;
               case 398:
                  if (curChar == 32)
                     { jjAddStates(146, 147); }
                  break;
               case 400:
                  if (curChar == 32)
                     { jjAddStates(148, 149); }
                  break;
               case 401:
                  if (kind > 287)
                     kind = 287;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 294)
                     kind = 294;
                  { jjCheckNAdd(2); }
                  break;
               case 5:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 6:
                  if (curChar == 92)
                     { jjAddStates(150, 152); }
                  break;
               case 7:
                  if ((0x10400010000000L & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 9:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(2, 4); }
                  break;
               case 17:
                  if (kind > 293)
                     kind = 293;
                  jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
               case 21:
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 26:
                  if (curChar == 116)
                     { jjAddStates(10, 11); }
                  break;
               case 28:
                  if (kind > 11)
                     kind = 11;
                  break;
               case 29:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 30:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 38:
                  if (curChar == 82)
                     { jjAddStates(14, 15); }
                  break;
               case 40:
                  if (kind > 17)
                     kind = 17;
                  break;
               case 41:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 42:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 44:
                  if (curChar == 115)
                     { jjAddStates(18, 19); }
                  break;
               case 46:
                  if (kind > 25)
                     kind = 25;
                  break;
               case 47:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 48:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 51:
                  if (curChar == 116)
                     { jjAddStates(22, 23); }
                  break;
               case 53:
                  if (kind > 31)
                     kind = 31;
                  break;
               case 54:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 55:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 68:
                  if (curChar == 103)
                     { jjAddStates(26, 27); }
                  break;
               case 70:
                  if (kind > 53)
                     kind = 53;
                  break;
               case 71:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 72:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 74:
                  if (curChar == 84)
                     { jjAddStates(30, 31); }
                  break;
               case 76:
                  if (kind > 59)
                     kind = 59;
                  break;
               case 77:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 78:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 80:
                  if (curChar == 115)
                     { jjAddStates(34, 35); }
                  break;
               case 82:
                  if (kind > 65)
                     kind = 65;
                  break;
               case 83:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 84:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 93:
                  if (curChar == 115)
                     { jjAddStates(38, 39); }
                  break;
               case 95:
                  if (kind > 71)
                     kind = 71;
                  break;
               case 96:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 98:
                  if (curChar == 110)
                     { jjAddStates(42, 43); }
                  break;
               case 100:
                  if (kind > 91)
                     kind = 91;
                  break;
               case 101:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 111:
                  if (curChar == 101)
                     { jjAddStates(46, 47); }
                  break;
               case 113:
                  if (kind > 99)
                     kind = 99;
                  break;
               case 114:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 115:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 118:
                  if (curChar == 116)
                     { jjAddStates(50, 51); }
                  break;
               case 120:
                  if (kind > 106)
                     kind = 106;
                  break;
               case 121:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 122:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 129:
                  if (curChar == 115)
                     { jjAddStates(54, 55); }
                  break;
               case 131:
                  if (kind > 112)
                     kind = 112;
                  break;
               case 132:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 133:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 144:
                  if (curChar == 109)
                     { jjAddStates(58, 59); }
                  break;
               case 146:
                  if (kind > 120)
                     kind = 120;
                  break;
               case 147:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 148:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if (curChar == 108)
                     { jjAddStates(62, 63); }
                  break;
               case 152:
                  if (kind > 126)
                     kind = 126;
                  break;
               case 153:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 154:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
                  if (curChar == 108)
                     { jjAddStates(66, 67); }
                  break;
               case 173:
                  if (kind > 132)
                     kind = 132;
                  break;
               case 174:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 175:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 179:
                  if (curChar == 115)
                     { jjAddStates(70, 71); }
                  break;
               case 181:
                  if (kind > 138)
                     kind = 138;
                  break;
               case 182:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 183:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 190:
                  if (curChar == 101)
                     { jjAddStates(74, 75); }
                  break;
               case 192:
                  if (kind > 144)
                     kind = 144;
                  break;
               case 193:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 194:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 210:
                  if (curChar == 108)
                     { jjAddStates(78, 79); }
                  break;
               case 212:
                  if (kind > 151)
                     kind = 151;
                  break;
               case 213:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 214:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 219:
                  if (curChar == 108)
                     { jjAddStates(82, 83); }
                  break;
               case 221:
                  if (kind > 157)
                     kind = 157;
                  break;
               case 222:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 223:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 240:
                  if (curChar == 109)
                     { jjAddStates(86, 87); }
                  break;
               case 242:
                  if (kind > 163)
                     kind = 163;
                  break;
               case 243:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 244:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 250:
                  if (curChar == 103)
                     { jjAddStates(90, 91); }
                  break;
               case 252:
                  if (kind > 169)
                     kind = 169;
                  break;
               case 253:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 254:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 259:
                  if (curChar == 110)
                     { jjAddStates(94, 95); }
                  break;
               case 261:
                  if (kind > 175)
                     kind = 175;
                  break;
               case 262:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 263:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 266:
                  if (curChar == 112)
                     { jjAddStates(98, 99); }
                  break;
               case 268:
                  if (kind > 203)
                     kind = 203;
                  break;
               case 269:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 271:
                  if (curChar == 115)
                     { jjAddStates(102, 103); }
                  break;
               case 273:
                  if (kind > 209)
                     kind = 209;
                  break;
               case 274:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 275:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 286:
                  if (curChar == 108)
                     { jjAddStates(106, 107); }
                  break;
               case 288:
                  if (kind > 215)
                     kind = 215;
                  break;
               case 289:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 290:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 301:
                  if (curChar == 68)
                     { jjAddStates(110, 111); }
                  break;
               case 303:
                  if (kind > 221)
                     kind = 221;
                  break;
               case 304:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 306:
                  if (curChar == 110)
                     { jjAddStates(114, 115); }
                  break;
               case 308:
                  if (kind > 230)
                     kind = 230;
                  break;
               case 309:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 310:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 320:
                  if (curChar == 103)
                     { jjAddStates(118, 119); }
                  break;
               case 322:
                  if (kind > 238)
                     kind = 238;
                  break;
               case 323:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 324:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 326:
                  if (curChar == 110)
                     { jjAddStates(122, 123); }
                  break;
               case 328:
                  if (kind > 245)
                     kind = 245;
                  break;
               case 329:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 330:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 340:
                  if (curChar == 114)
                     { jjAddStates(126, 127); }
                  break;
               case 342:
                  if (kind > 251)
                     kind = 251;
                  break;
               case 343:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 344:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 350:
                  if (curChar == 116)
                     { jjAddStates(130, 131); }
                  break;
               case 352:
                  if (kind > 257)
                     kind = 257;
                  break;
               case 353:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 354:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 361:
                  if (curChar == 114)
                     { jjAddStates(134, 135); }
                  break;
               case 363:
                  if (kind > 263)
                     kind = 263;
                  break;
               case 364:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 365:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 374:
                  if (curChar == 100)
                     { jjAddStates(138, 139); }
                  break;
               case 376:
                  if (kind > 269)
                     kind = 269;
                  break;
               case 377:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 378:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 387:
                  if (kind > 275)
                     kind = 275;
                  break;
               case 388:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 389:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 394:
                  if (curChar == 84)
                     { jjAddStates(144, 145); }
                  break;
               case 396:
                  if (kind > 281)
                     kind = 281;
                  break;
               case 397:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 399:
                  if (curChar == 108)
                     { jjAddStates(148, 149); }
                  break;
               case 401:
                  if (kind > 287)
                     kind = 287;
                  break;
               case 402:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 403:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjAddStates(153, 224); }
                  break;
               case 5:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(2, 4); }
                  break;
               case 17:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 293)
                     kind = 293;
                  jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
               case 21:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 28:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               case 40:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 17)
                     kind = 17;
                  break;
               case 46:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 25)
                     kind = 25;
                  break;
               case 53:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 31)
                     kind = 31;
                  break;
               case 70:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 53)
                     kind = 53;
                  break;
               case 76:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 59)
                     kind = 59;
                  break;
               case 82:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 65)
                     kind = 65;
                  break;
               case 95:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 71)
                     kind = 71;
                  break;
               case 100:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 91)
                     kind = 91;
                  break;
               case 113:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 99)
                     kind = 99;
                  break;
               case 120:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 106)
                     kind = 106;
                  break;
               case 131:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 112)
                     kind = 112;
                  break;
               case 146:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 120)
                     kind = 120;
                  break;
               case 152:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 126)
                     kind = 126;
                  break;
               case 173:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 132)
                     kind = 132;
                  break;
               case 181:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 138)
                     kind = 138;
                  break;
               case 192:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 144)
                     kind = 144;
                  break;
               case 212:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 151)
                     kind = 151;
                  break;
               case 221:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 157)
                     kind = 157;
                  break;
               case 242:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 163)
                     kind = 163;
                  break;
               case 252:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 169)
                     kind = 169;
                  break;
               case 261:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 175)
                     kind = 175;
                  break;
               case 268:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 203)
                     kind = 203;
                  break;
               case 273:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 209)
                     kind = 209;
                  break;
               case 288:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 215)
                     kind = 215;
                  break;
               case 303:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 221)
                     kind = 221;
                  break;
               case 308:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 230)
                     kind = 230;
                  break;
               case 322:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 238)
                     kind = 238;
                  break;
               case 328:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 245)
                     kind = 245;
                  break;
               case 342:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 251)
                     kind = 251;
                  break;
               case 352:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 257)
                     kind = 257;
                  break;
               case 363:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 263)
                     kind = 263;
                  break;
               case 376:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 269)
                     kind = 269;
                  break;
               case 387:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 275)
                     kind = 275;
                  break;
               case 396:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 281)
                     kind = 281;
                  break;
               case 401:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 287)
                     kind = 287;
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 406 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 26);
      case 10217:
         return jjStopAtPos(0, 29);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_70(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 283);
      case 10217:
         return jjStopAtPos(0, 284);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_19(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 100);
      case 10217:
         return jjStopAtPos(0, 103);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_33(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 145);
      case 10217:
         return jjStopAtPos(0, 148);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_61(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 258);
      case 10217:
         return jjStopAtPos(0, 261);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_8(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 33);
      case 10217:
         return jjStopAtPos(0, 34);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_32(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 140);
      case 10217:
         return jjStopAtPos(0, 141);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_67(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 276);
      case 10217:
         return jjStopAtPos(0, 279);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_21(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 107);
      case 10217:
         return jjStopAtPos(0, 110);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_53(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 231);
      case 10217:
         return jjStopAtPos(0, 234);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_63(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 264);
      case 10217:
         return jjStopAtPos(0, 267);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_68(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 277);
      case 10217:
         return jjStopAtPos(0, 278);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_56(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 240);
      case 10217:
         return jjStopAtPos(0, 241);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_34(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 146);
      case 10217:
         return jjStopAtPos(0, 147);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_57(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 246);
      case 10217:
         return jjStopAtPos(0, 249);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_13(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 66);
      case 10217:
         return jjStopAtPos(0, 69);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_27(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 127);
      case 10217:
         return jjStopAtPos(0, 130);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_40(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 165);
      case 10217:
         return jjStopAtPos(0, 166);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_28(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 128);
      case 10217:
         return jjStopAtPos(0, 129);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_17(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 92);
      case 10217:
         return jjStopAtPos(0, 95);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 18);
      case 10217:
         return jjStopAtPos(0, 21);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_39(){
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 164);
      case 10217:
         return jjStopAtPos(0, 167);
      default :
         return 1;
   }
}
static final int[] jjnextStates = {
   16, 18, 5, 6, 8, 19, 20, 23, 25, 36, 27, 28, 37, 42, 39, 40, 
   43, 49, 45, 46, 50, 66, 52, 53, 67, 72, 69, 70, 73, 78, 75, 76, 
   79, 91, 81, 82, 92, 96, 94, 95, 97, 109, 99, 100, 110, 116, 112, 113, 
   117, 127, 119, 120, 128, 142, 130, 131, 143, 148, 145, 146, 149, 169, 151, 152, 
   170, 177, 172, 173, 178, 188, 180, 181, 189, 208, 191, 192, 209, 217, 211, 212, 
   218, 238, 220, 221, 239, 248, 241, 242, 249, 257, 251, 252, 258, 264, 260, 261, 
   265, 269, 267, 268, 270, 284, 272, 273, 285, 299, 287, 288, 300, 304, 302, 303, 
   305, 318, 307, 308, 319, 324, 321, 322, 325, 338, 327, 328, 339, 348, 341, 342, 
   349, 359, 351, 352, 360, 372, 362, 363, 373, 383, 375, 376, 384, 392, 393, 397, 
   395, 396, 398, 405, 400, 401, 7, 9, 12, 25, 36, 37, 42, 43, 49, 50, 
   66, 67, 72, 73, 78, 79, 91, 92, 96, 97, 109, 110, 116, 117, 127, 128, 
   142, 143, 148, 149, 169, 170, 177, 178, 188, 189, 208, 209, 217, 218, 238, 239, 
   248, 249, 257, 258, 264, 265, 269, 270, 284, 285, 299, 300, 304, 305, 318, 319, 
   324, 325, 338, 339, 348, 349, 359, 360, 372, 373, 383, 384, 392, 393, 397, 398, 
   405, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 39:
         return ((jjbitVec3[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      case 39:
         return ((jjbitVec5[i2] & l2) != 0L);
      default :
         if ((jjbitVec4[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", "\151\146", "\50", "\51", "\162\145\164\165\162\156", "\73", 
"\166\141\162", "\167\150\151\154\145", "\173", "\175", "\75", null, null, null, null, null, 
null, null, null, null, null, null, null, "\54", "\55", null, null, null, null, null, 
null, null, null, null, null, null, null, "\114\122", "\120\103", "\122\60", 
"\122\61", "\122\61\60", "\122\61\61", "\122\61\62", "\122\62", "\122\63", "\122\64", 
"\122\65", "\122\66", "\122\67", "\122\70", "\122\71", "\123\120", null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\174\174", "\46\46", "\41\75", "\75\75", "\74", 
"\74\75", "\76", "\76\75", "\53", "\52", "\41", "\46", "\156\165\154\154", 
"\163\151\172\145\157\146", null, null, null, null, null, null, "\143\150\141\162", "\151\156\164", null, 
null, null, null, null, null, "\43", null, null, null, null, null, null, null, null, 
null, null, null, null, "\133", "\135", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\145\154\163\145", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\101\104\104", "\101\116\104", "\102", "\102\105\121", "\102\107\105", "\102\107\124", 
"\102\114", "\102\114\105", "\102\114\124", "\102\116\105", "\103\115\120", 
"\105\117\122", "\114\104\115\106\104", "\114\104\122", "\115\117\126", "\115\125\114", 
"\115\126\116", "\117\122\122", "\122\123\102", "\123\124\115\106\104", "\123\124\122", 
"\123\125\102", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\104\103\111", 
"\104\103\123", "\104\105\106", null, null, null, null, null, null, "\114\123\114", 
"\114\123\122", null, null, null, null, null, null, "\146\165\156\143\164\151\157\156", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 16)
         {
            jjmatchedKind = 16;
         }
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 16)
         {
            jjmatchedKind = 16;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 22)
         {
            jjmatchedKind = 22;
         }
         break;
       case 4:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         if (jjmatchedPos == 0 && jjmatchedKind > 22)
         {
            jjmatchedKind = 22;
         }
         break;
       case 5:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_5();
         if (jjmatchedPos == 0 && jjmatchedKind > 30)
         {
            jjmatchedKind = 30;
         }
         break;
       case 6:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_6();
         if (jjmatchedPos == 0 && jjmatchedKind > 30)
         {
            jjmatchedKind = 30;
         }
         break;
       case 7:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_7();
         if (jjmatchedPos == 0 && jjmatchedKind > 36)
         {
            jjmatchedKind = 36;
         }
         break;
       case 8:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_8();
         if (jjmatchedPos == 0 && jjmatchedKind > 36)
         {
            jjmatchedKind = 36;
         }
         break;
       case 9:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_9();
         if (jjmatchedPos == 0 && jjmatchedKind > 58)
         {
            jjmatchedKind = 58;
         }
         break;
       case 10:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_10();
         if (jjmatchedPos == 0 && jjmatchedKind > 58)
         {
            jjmatchedKind = 58;
         }
         break;
       case 11:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_11();
         if (jjmatchedPos == 0 && jjmatchedKind > 64)
         {
            jjmatchedKind = 64;
         }
         break;
       case 12:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_12();
         if (jjmatchedPos == 0 && jjmatchedKind > 64)
         {
            jjmatchedKind = 64;
         }
         break;
       case 13:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_13();
         if (jjmatchedPos == 0 && jjmatchedKind > 70)
         {
            jjmatchedKind = 70;
         }
         break;
       case 14:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_14();
         if (jjmatchedPos == 0 && jjmatchedKind > 70)
         {
            jjmatchedKind = 70;
         }
         break;
       case 15:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_15();
         if (jjmatchedPos == 0 && jjmatchedKind > 76)
         {
            jjmatchedKind = 76;
         }
         break;
       case 16:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_16();
         if (jjmatchedPos == 0 && jjmatchedKind > 76)
         {
            jjmatchedKind = 76;
         }
         break;
       case 17:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_17();
         if (jjmatchedPos == 0 && jjmatchedKind > 96)
         {
            jjmatchedKind = 96;
         }
         break;
       case 18:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_18();
         if (jjmatchedPos == 0 && jjmatchedKind > 96)
         {
            jjmatchedKind = 96;
         }
         break;
       case 19:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_19();
         if (jjmatchedPos == 0 && jjmatchedKind > 104)
         {
            jjmatchedKind = 104;
         }
         break;
       case 20:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_20();
         if (jjmatchedPos == 0 && jjmatchedKind > 104)
         {
            jjmatchedKind = 104;
         }
         break;
       case 21:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_21();
         if (jjmatchedPos == 0 && jjmatchedKind > 111)
         {
            jjmatchedKind = 111;
         }
         break;
       case 22:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_22();
         if (jjmatchedPos == 0 && jjmatchedKind > 111)
         {
            jjmatchedKind = 111;
         }
         break;
       case 23:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_23();
         if (jjmatchedPos == 0 && jjmatchedKind > 117)
         {
            jjmatchedKind = 117;
         }
         break;
       case 24:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_24();
         if (jjmatchedPos == 0 && jjmatchedKind > 117)
         {
            jjmatchedKind = 117;
         }
         break;
       case 25:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_25();
         if (jjmatchedPos == 0 && jjmatchedKind > 125)
         {
            jjmatchedKind = 125;
         }
         break;
       case 26:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_26();
         if (jjmatchedPos == 0 && jjmatchedKind > 125)
         {
            jjmatchedKind = 125;
         }
         break;
       case 27:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_27();
         if (jjmatchedPos == 0 && jjmatchedKind > 131)
         {
            jjmatchedKind = 131;
         }
         break;
       case 28:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_28();
         if (jjmatchedPos == 0 && jjmatchedKind > 131)
         {
            jjmatchedKind = 131;
         }
         break;
       case 29:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_29();
         if (jjmatchedPos == 0 && jjmatchedKind > 137)
         {
            jjmatchedKind = 137;
         }
         break;
       case 30:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_30();
         if (jjmatchedPos == 0 && jjmatchedKind > 137)
         {
            jjmatchedKind = 137;
         }
         break;
       case 31:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_31();
         if (jjmatchedPos == 0 && jjmatchedKind > 143)
         {
            jjmatchedKind = 143;
         }
         break;
       case 32:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_32();
         if (jjmatchedPos == 0 && jjmatchedKind > 143)
         {
            jjmatchedKind = 143;
         }
         break;
       case 33:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_33();
         if (jjmatchedPos == 0 && jjmatchedKind > 149)
         {
            jjmatchedKind = 149;
         }
         break;
       case 34:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_34();
         if (jjmatchedPos == 0 && jjmatchedKind > 149)
         {
            jjmatchedKind = 149;
         }
         break;
       case 35:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_35();
         if (jjmatchedPos == 0 && jjmatchedKind > 156)
         {
            jjmatchedKind = 156;
         }
         break;
       case 36:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_36();
         if (jjmatchedPos == 0 && jjmatchedKind > 156)
         {
            jjmatchedKind = 156;
         }
         break;
       case 37:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_37();
         if (jjmatchedPos == 0 && jjmatchedKind > 162)
         {
            jjmatchedKind = 162;
         }
         break;
       case 38:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_38();
         if (jjmatchedPos == 0 && jjmatchedKind > 162)
         {
            jjmatchedKind = 162;
         }
         break;
       case 39:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_39();
         if (jjmatchedPos == 0 && jjmatchedKind > 168)
         {
            jjmatchedKind = 168;
         }
         break;
       case 40:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_40();
         if (jjmatchedPos == 0 && jjmatchedKind > 168)
         {
            jjmatchedKind = 168;
         }
         break;
       case 41:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_41();
         if (jjmatchedPos == 0 && jjmatchedKind > 174)
         {
            jjmatchedKind = 174;
         }
         break;
       case 42:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_42();
         if (jjmatchedPos == 0 && jjmatchedKind > 174)
         {
            jjmatchedKind = 174;
         }
         break;
       case 43:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_43();
         if (jjmatchedPos == 0 && jjmatchedKind > 180)
         {
            jjmatchedKind = 180;
         }
         break;
       case 44:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_44();
         if (jjmatchedPos == 0 && jjmatchedKind > 180)
         {
            jjmatchedKind = 180;
         }
         break;
       case 45:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_45();
         if (jjmatchedPos == 0 && jjmatchedKind > 208)
         {
            jjmatchedKind = 208;
         }
         break;
       case 46:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_46();
         if (jjmatchedPos == 0 && jjmatchedKind > 208)
         {
            jjmatchedKind = 208;
         }
         break;
       case 47:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_47();
         if (jjmatchedPos == 0 && jjmatchedKind > 214)
         {
            jjmatchedKind = 214;
         }
         break;
       case 48:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_48();
         if (jjmatchedPos == 0 && jjmatchedKind > 214)
         {
            jjmatchedKind = 214;
         }
         break;
       case 49:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_49();
         if (jjmatchedPos == 0 && jjmatchedKind > 220)
         {
            jjmatchedKind = 220;
         }
         break;
       case 50:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_50();
         if (jjmatchedPos == 0 && jjmatchedKind > 220)
         {
            jjmatchedKind = 220;
         }
         break;
       case 51:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_51();
         if (jjmatchedPos == 0 && jjmatchedKind > 226)
         {
            jjmatchedKind = 226;
         }
         break;
       case 52:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_52();
         if (jjmatchedPos == 0 && jjmatchedKind > 226)
         {
            jjmatchedKind = 226;
         }
         break;
       case 53:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_53();
         if (jjmatchedPos == 0 && jjmatchedKind > 235)
         {
            jjmatchedKind = 235;
         }
         break;
       case 54:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_54();
         if (jjmatchedPos == 0 && jjmatchedKind > 235)
         {
            jjmatchedKind = 235;
         }
         break;
       case 55:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_55();
         if (jjmatchedPos == 0 && jjmatchedKind > 243)
         {
            jjmatchedKind = 243;
         }
         break;
       case 56:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_56();
         if (jjmatchedPos == 0 && jjmatchedKind > 243)
         {
            jjmatchedKind = 243;
         }
         break;
       case 57:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_57();
         if (jjmatchedPos == 0 && jjmatchedKind > 250)
         {
            jjmatchedKind = 250;
         }
         break;
       case 58:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_58();
         if (jjmatchedPos == 0 && jjmatchedKind > 250)
         {
            jjmatchedKind = 250;
         }
         break;
       case 59:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_59();
         if (jjmatchedPos == 0 && jjmatchedKind > 256)
         {
            jjmatchedKind = 256;
         }
         break;
       case 60:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_60();
         if (jjmatchedPos == 0 && jjmatchedKind > 256)
         {
            jjmatchedKind = 256;
         }
         break;
       case 61:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_61();
         if (jjmatchedPos == 0 && jjmatchedKind > 262)
         {
            jjmatchedKind = 262;
         }
         break;
       case 62:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_62();
         if (jjmatchedPos == 0 && jjmatchedKind > 262)
         {
            jjmatchedKind = 262;
         }
         break;
       case 63:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_63();
         if (jjmatchedPos == 0 && jjmatchedKind > 268)
         {
            jjmatchedKind = 268;
         }
         break;
       case 64:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_64();
         if (jjmatchedPos == 0 && jjmatchedKind > 268)
         {
            jjmatchedKind = 268;
         }
         break;
       case 65:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_65();
         if (jjmatchedPos == 0 && jjmatchedKind > 274)
         {
            jjmatchedKind = 274;
         }
         break;
       case 66:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_66();
         if (jjmatchedPos == 0 && jjmatchedKind > 274)
         {
            jjmatchedKind = 274;
         }
         break;
       case 67:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_67();
         if (jjmatchedPos == 0 && jjmatchedKind > 280)
         {
            jjmatchedKind = 280;
         }
         break;
       case 68:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_68();
         if (jjmatchedPos == 0 && jjmatchedKind > 280)
         {
            jjmatchedKind = 280;
         }
         break;
       case 69:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_69();
         if (jjmatchedPos == 0 && jjmatchedKind > 286)
         {
            jjmatchedKind = 286;
         }
         break;
       case 70:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_70();
         if (jjmatchedPos == 0 && jjmatchedKind > 286)
         {
            jjmatchedKind = 286;
         }
         break;
       case 71:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_71();
         if (jjmatchedPos == 0 && jjmatchedKind > 292)
         {
            jjmatchedKind = 292;
         }
         break;
       case 72:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_72();
         if (jjmatchedPos == 0 && jjmatchedKind > 292)
         {
            jjmatchedKind = 292;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 11 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                       nesting = 0; nestedState = curLexState;
         break;
      case 12 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        nesting = 1;
         break;
      case 13 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                               nesting++;
         break;
      case 14 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                               if (--nesting <= 0) SwitchTo(IN_META_Statement);
         break;
      case 17 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nesting = 0; nestedState = curLexState;
         break;
      case 18 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                  nesting = 1;
         break;
      case 19 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting++;
         break;
      case 20 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         if (--nesting <= 0) SwitchTo(IN_META_STR);
         break;
      case 25 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                  nesting = 0; nestedState = curLexState;
         break;
      case 26 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                   nesting = 1;
         break;
      case 27 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          nesting++;
         break;
      case 28 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          if (--nesting <= 0) SwitchTo(IN_META_Regs);
         break;
      case 31 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                            nesting = 0; nestedState = curLexState;
         break;
      case 32 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             nesting = 1;
         break;
      case 33 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                    nesting++;
         break;
      case 34 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                    if (--nesting <= 0) SwitchTo(IN_META_ExpressionList);
         break;
      case 53 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nesting = 0; nestedState = curLexState;
         break;
      case 54 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                  nesting = 1;
         break;
      case 55 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting++;
         break;
      case 56 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         if (--nesting <= 0) SwitchTo(IN_META_Reg);
         break;
      case 59 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nesting = 0; nestedState = curLexState;
         break;
      case 60 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                  nesting = 1;
         break;
      case 61 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting++;
         break;
      case 62 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         if (--nesting <= 0) SwitchTo(IN_META_INT);
         break;
      case 65 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                        nesting = 0; nestedState = curLexState;
         break;
      case 66 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting = 1;
         break;
      case 67 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                nesting++;
         break;
      case 68 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                if (--nesting <= 0) SwitchTo(IN_META_Statements);
         break;
      case 71 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                nesting = 0; nestedState = curLexState;
         break;
      case 72 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                 nesting = 1;
         break;
      case 73 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        nesting++;
         break;
      case 74 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        if (--nesting <= 0) SwitchTo(IN_META_Rs);
         break;
      case 91 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                        nesting = 0; nestedState = curLexState;
         break;
      case 92 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting = 1;
         break;
      case 93 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                nesting++;
         break;
      case 94 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                if (--nesting <= 0) SwitchTo(IN_META_Expression);
         break;
      case 99 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                  nesting = 0; nestedState = curLexState;
         break;
      case 100 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                   nesting = 1;
         break;
      case 101 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          nesting++;
         break;
      case 102 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          if (--nesting <= 0) SwitchTo(IN_META_Type);
         break;
      case 106 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                      nesting = 0; nestedState = curLexState;
         break;
      case 107 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                       nesting = 1;
         break;
      case 108 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              nesting++;
         break;
      case 109 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nesting <= 0) SwitchTo(IN_META_Constant);
         break;
      case 112 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                          nesting = 0; nestedState = curLexState;
         break;
      case 113 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           nesting = 1;
         break;
      case 114 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  nesting++;
         break;
      case 115 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nesting <= 0) SwitchTo(IN_META_Declarations);
         break;
      case 120 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nesting = 0; nestedState = curLexState;
         break;
      case 121 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                  nesting = 1;
         break;
      case 122 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting++;
         break;
      case 123 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         if (--nesting <= 0) SwitchTo(IN_META_Mem);
         break;
      case 126 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                                nesting = 0; nestedState = curLexState;
         break;
      case 127 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 nesting = 1;
         break;
      case 128 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        nesting++;
         break;
      case 129 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        if (--nesting <= 0) SwitchTo(IN_META_TypeIdentifierTail);
         break;
      case 132 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                   nesting = 0; nestedState = curLexState;
         break;
      case 133 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                    nesting = 1;
         break;
      case 134 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           nesting++;
         break;
      case 135 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           if (--nesting <= 0) SwitchTo(IN_META_Label);
         break;
      case 138 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                      nesting = 0; nestedState = curLexState;
         break;
      case 139 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                       nesting = 1;
         break;
      case 140 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              nesting++;
         break;
      case 141 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nesting <= 0) SwitchTo(IN_META_Integers);
         break;
      case 144 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                               nesting = 0; nestedState = curLexState;
         break;
      case 145 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                nesting = 1;
         break;
      case 146 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                       nesting++;
         break;
      case 147 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                       if (--nesting <= 0) SwitchTo(IN_META_ArgumentSignature);
         break;
      case 151 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                    nesting = 0; nestedState = curLexState;
         break;
      case 152 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                     nesting = 1;
         break;
      case 153 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            nesting++;
         break;
      case 154 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            if (--nesting <= 0) SwitchTo(IN_META_IfTail);
         break;
      case 157 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                                nesting = 0; nestedState = curLexState;
         break;
      case 158 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 nesting = 1;
         break;
      case 159 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        nesting++;
         break;
      case 160 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        if (--nesting <= 0) SwitchTo(IN_META_ExpressionListTail);
         break;
      case 163 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                     nesting = 0; nestedState = curLexState;
         break;
      case 164 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                      nesting = 1;
         break;
      case 165 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             nesting++;
         break;
      case 166 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             if (--nesting <= 0) SwitchTo(IN_META_Program);
         break;
      case 169 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                    nesting = 0; nestedState = curLexState;
         break;
      case 170 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                     nesting = 1;
         break;
      case 171 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            nesting++;
         break;
      case 172 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            if (--nesting <= 0) SwitchTo(IN_META_String);
         break;
      case 175 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                  nesting = 0; nestedState = curLexState;
         break;
      case 176 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                   nesting = 1;
         break;
      case 177 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          nesting++;
         break;
      case 178 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          if (--nesting <= 0) SwitchTo(IN_META_Sign);
         break;
      case 203 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                nesting = 0; nestedState = curLexState;
         break;
      case 204 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                 nesting = 1;
         break;
      case 205 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        nesting++;
         break;
      case 206 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        if (--nesting <= 0) SwitchTo(IN_META_Op);
         break;
      case 209 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                          nesting = 0; nestedState = curLexState;
         break;
      case 210 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           nesting = 1;
         break;
      case 211 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  nesting++;
         break;
      case 212 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nesting <= 0) SwitchTo(IN_META_Instructions);
         break;
      case 215 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                          nesting = 0; nestedState = curLexState;
         break;
      case 216 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           nesting = 1;
         break;
      case 217 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  nesting++;
         break;
      case 218 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nesting <= 0) SwitchTo(IN_META_TypeListTail);
         break;
      case 221 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                nesting = 0; nestedState = curLexState;
         break;
      case 222 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                 nesting = 1;
         break;
      case 223 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        nesting++;
         break;
      case 224 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        if (--nesting <= 0) SwitchTo(IN_META_ID);
         break;
      case 230 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                         nesting = 0; nestedState = curLexState;
         break;
      case 231 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          nesting = 1;
         break;
      case 232 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 nesting++;
         break;
      case 233 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 if (--nesting <= 0) SwitchTo(IN_META_Instruction);
         break;
      case 238 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nesting = 0; nestedState = curLexState;
         break;
      case 239 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                  nesting = 1;
         break;
      case 240 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting++;
         break;
      case 241 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         if (--nesting <= 0) SwitchTo(IN_META_Arg);
         break;
      case 245 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                         nesting = 0; nestedState = curLexState;
         break;
      case 246 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                          nesting = 1;
         break;
      case 247 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 nesting++;
         break;
      case 248 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                 if (--nesting <= 0) SwitchTo(IN_META_Declaration);
         break;
      case 251 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                     nesting = 0; nestedState = curLexState;
         break;
      case 252 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                      nesting = 1;
         break;
      case 253 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             nesting++;
         break;
      case 254 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             if (--nesting <= 0) SwitchTo(IN_META_Integer);
         break;
      case 257 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                      nesting = 0; nestedState = curLexState;
         break;
      case 258 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                       nesting = 1;
         break;
      case 259 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              nesting++;
         break;
      case 260 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nesting <= 0) SwitchTo(IN_META_TypeList);
         break;
      case 263 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                        nesting = 0; nestedState = curLexState;
         break;
      case 264 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                         nesting = 1;
         break;
      case 265 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                nesting++;
         break;
      case 266 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                if (--nesting <= 0) SwitchTo(IN_META_Identifier);
         break;
      case 269 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                      nesting = 0; nestedState = curLexState;
         break;
      case 270 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                       nesting = 1;
         break;
      case 271 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              nesting++;
         break;
      case 272 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nesting <= 0) SwitchTo(IN_META_Computed);
         break;
      case 275 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                    nesting = 0; nestedState = curLexState;
         break;
      case 276 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                     nesting = 1;
         break;
      case 277 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            nesting++;
         break;
      case 278 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            if (--nesting <= 0) SwitchTo(IN_META_After1);
         break;
      case 281 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                nesting = 0; nestedState = curLexState;
         break;
      case 282 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                 nesting = 1;
         break;
      case 283 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        nesting++;
         break;
      case 284 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                        if (--nesting <= 0) SwitchTo(IN_META_FT);
         break;
      case 287 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                   nesting = 0; nestedState = curLexState;
         break;
      case 288 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                    nesting = 1;
         break;
      case 289 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           nesting++;
         break;
      case 290 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           if (--nesting <= 0) SwitchTo(IN_META_Local);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 15 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                SwitchTo(nestedState);
         break;
      case 21 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    SwitchTo(nestedState);
         break;
      case 29 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                      SwitchTo(nestedState);
         break;
      case 35 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                          SwitchTo(nestedState);
         break;
      case 57 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    SwitchTo(nestedState);
         break;
      case 63 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    SwitchTo(nestedState);
         break;
      case 69 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  SwitchTo(nestedState);
         break;
      case 75 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  SwitchTo(nestedState);
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  SwitchTo(nestedState);
         break;
      case 103 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                      SwitchTo(nestedState);
         break;
      case 110 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                              SwitchTo(nestedState);
         break;
      case 116 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                      SwitchTo(nestedState);
         break;
      case 124 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    SwitchTo(nestedState);
         break;
      case 130 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                  SwitchTo(nestedState);
         break;
      case 136 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                        SwitchTo(nestedState);
         break;
      case 142 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                              SwitchTo(nestedState);
         break;
      case 148 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                SwitchTo(nestedState);
         break;
      case 155 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          SwitchTo(nestedState);
         break;
      case 161 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                  SwitchTo(nestedState);
         break;
      case 167 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                            SwitchTo(nestedState);
         break;
      case 173 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          SwitchTo(nestedState);
         break;
      case 179 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                      SwitchTo(nestedState);
         break;
      case 207 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  SwitchTo(nestedState);
         break;
      case 213 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                      SwitchTo(nestedState);
         break;
      case 219 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                      SwitchTo(nestedState);
         break;
      case 225 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  SwitchTo(nestedState);
         break;
      case 234 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                    SwitchTo(nestedState);
         break;
      case 242 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    SwitchTo(nestedState);
         break;
      case 249 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                    SwitchTo(nestedState);
         break;
      case 255 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                            SwitchTo(nestedState);
         break;
      case 261 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                              SwitchTo(nestedState);
         break;
      case 267 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                  SwitchTo(nestedState);
         break;
      case 273 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                              SwitchTo(nestedState);
         break;
      case 279 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          SwitchTo(nestedState);
         break;
      case 285 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  SwitchTo(nestedState);
         break;
      case 291 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                        SwitchTo(nestedState);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public Pr3YunjianEmbedTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public Pr3YunjianEmbedTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 406; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 73 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_META_Statement",
   "IN_NESTED_META_Statement",
   "IN_META_STR",
   "IN_NESTED_META_STR",
   "IN_META_Regs",
   "IN_NESTED_META_Regs",
   "IN_META_ExpressionList",
   "IN_NESTED_META_ExpressionList",
   "IN_META_Reg",
   "IN_NESTED_META_Reg",
   "IN_META_INT",
   "IN_NESTED_META_INT",
   "IN_META_Statements",
   "IN_NESTED_META_Statements",
   "IN_META_Rs",
   "IN_NESTED_META_Rs",
   "IN_META_Expression",
   "IN_NESTED_META_Expression",
   "IN_META_Type",
   "IN_NESTED_META_Type",
   "IN_META_Constant",
   "IN_NESTED_META_Constant",
   "IN_META_Declarations",
   "IN_NESTED_META_Declarations",
   "IN_META_Mem",
   "IN_NESTED_META_Mem",
   "IN_META_TypeIdentifierTail",
   "IN_NESTED_META_TypeIdentifierTail",
   "IN_META_Label",
   "IN_NESTED_META_Label",
   "IN_META_Integers",
   "IN_NESTED_META_Integers",
   "IN_META_ArgumentSignature",
   "IN_NESTED_META_ArgumentSignature",
   "IN_META_IfTail",
   "IN_NESTED_META_IfTail",
   "IN_META_ExpressionListTail",
   "IN_NESTED_META_ExpressionListTail",
   "IN_META_Program",
   "IN_NESTED_META_Program",
   "IN_META_String",
   "IN_NESTED_META_String",
   "IN_META_Sign",
   "IN_NESTED_META_Sign",
   "IN_META_Op",
   "IN_NESTED_META_Op",
   "IN_META_Instructions",
   "IN_NESTED_META_Instructions",
   "IN_META_TypeListTail",
   "IN_NESTED_META_TypeListTail",
   "IN_META_ID",
   "IN_NESTED_META_ID",
   "IN_META_Instruction",
   "IN_NESTED_META_Instruction",
   "IN_META_Arg",
   "IN_NESTED_META_Arg",
   "IN_META_Declaration",
   "IN_NESTED_META_Declaration",
   "IN_META_Integer",
   "IN_NESTED_META_Integer",
   "IN_META_TypeList",
   "IN_NESTED_META_TypeList",
   "IN_META_Identifier",
   "IN_NESTED_META_Identifier",
   "IN_META_Computed",
   "IN_NESTED_META_Computed",
   "IN_META_After1",
   "IN_NESTED_META_After1",
   "IN_META_FT",
   "IN_NESTED_META_FT",
   "IN_META_Local",
   "IN_NESTED_META_Local",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, 
   5, 6, -1, -1, -1, -1, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 9, 10, -1, -1, -1, -1, 11, 12, -1, -1, -1, -1, 13, 14, -1, -1, -1, -1, 15, 16, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 18, -1, -1, -1, -1, -1, -1, 19, 
   20, -1, -1, -1, -1, -1, 21, 22, -1, -1, -1, -1, 23, 24, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, 
   -1, 27, 28, -1, -1, -1, -1, 29, 30, -1, -1, -1, -1, 31, 32, -1, -1, -1, -1, 33, 34, -1, -1, -1, -1, 
   -1, 35, 36, -1, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, 
   43, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 45, 46, -1, -1, -1, -1, 47, 48, -1, -1, -1, -1, 49, 50, -1, -1, -1, -1, 51, 52, -1, -1, 
   -1, -1, -1, -1, -1, 53, 54, -1, -1, -1, -1, -1, -1, 55, 56, -1, -1, -1, -1, -1, 57, 58, -1, -1, -1, 
   -1, 59, 60, -1, -1, -1, -1, 61, 62, -1, -1, -1, -1, 63, 64, -1, -1, -1, -1, 65, 66, -1, -1, -1, -1, 
   67, 68, -1, -1, -1, -1, 69, 70, -1, -1, -1, -1, 71, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 
};
static final long[] jjtoToken = {
   0x821fffe821a087ffL, 0x10d0428687ffe820L, 0xffe8208208504104L, 0x8214343a082087ffL, 
   0x1c820820820L, 
};
static final long[] jjtoSkip = {
   0x0L, 0x0L, 0x0L, 0x0L, 
   0x2000000000L, 
};
static final long[] jjtoMore = {
   0x7de00017de5f7800L, 0xef2fbd79780017dfL, 0x17df7df7afbefbL, 0x7debcbc5f7df7800L, 
   0x17df7df7dfL, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[406];
    private final int[] jjstateSet = new int[2 * 406];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected char curChar;
}
